@model PaginatedList<TransactionViewModel>
<div class="row">
    <div class="col-md-12">
        <div class="card mb-3">
            <div class="card-header">ACCOUNT TRANSACTIONS LIST</div>
            <div class="card-body">
                <div class="table-responsive">
                    <div class="dataTables_wrapper container-fluid dt-bootstrap4">
                        <div class="row">
                            <div class="col-sm-12 col-md-6">
                                <div class="dataTables_length" id="accTable_length">
                                    <label>
                                        Show
                                        <select name="dataTable_length" class="form-control form-control-sm" id="trnTableLength">
                                            @foreach (var option in (int[])ViewData["LengthOptions"])
                                            {
                                                if (option == Model.PageSize)
                                                {
                                                    <option value="@option" selected>@option</option>
                                                }
                                                else
                                                {
                                                    <option value="@option">@option</option>
                                                }
                                            }

                                        </select> entries
                                    </label>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6">
                                <div id="accTable_filter" class="dataTables_filter">
                                    <label>
                                        Search:
                                        <input type="search" class="form-control form-control-sm" value="@ViewData["currentFilter"]" placeholder="Search in whole table" id="trnTableSearch">
                                    </label>
                                </div>
                            </div>
                        </div>
                        <table class="table table-hover mb-0 table_s1 " width="100%" cellspacing="0" id="acctable-header">

                            <thead>

                                <tr>

                                    <th class="center">
                                        Num
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["MainAccNumSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().MainAccountNum)</a>
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["CreatedOnSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().CreatedOn)</a>
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["SentOnSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().SentOn)</a>
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["SecondAccNumSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().SecondAccountNum)</a>
                                    </th>
                                    <th class="right">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["AmountSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().Amount)</a>
                                    </th>
                                    <th class="right">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["DescriptionSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().Description)</a>
                                    </th>
                                    @*<th></th>*@
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th class="center">
                                        Num
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["MainAccNumSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().MainAccountNum)</a>
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["CreatedOnSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().CreatedOn)</a>
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["SentOnSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().SentOn)</a>
                                    </th>
                                    <th class="center">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["SecondAccNumSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().SecondAccountNum)</a>
                                    </th>
                                    <th class="right">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["AmountSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().Amount)</a>
                                    </th>
                                    <th class="right">
                                        <a class="trnTableClickHandler" asp-action="GetTransactionsList" asp-route-sortOrder="@ViewData["DescriptionSortParm"]" asp-route-pageSize="@ViewData["pageSize"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-AccountId="@ViewData["AccountId"]">@Html.DisplayNameFor(model => model.First().Description)</a>
                                    </th>
                                    @*<th></th>*@
                                </tr>
                            </tfoot>
                            <tbody>
                                @{int count = 0; }
                                @foreach (var item in Model)
                                {
                                    count = count + 1;

                                <tr>
                                    <td class="center">
                                        @(count + (Model.PageIndex - 1) * Model.PageSize)
                                    </td>
                                    <td class="center">
                                        <strong>@Html.DisplayFor(modelItem => item.MainAccountNum)</strong>
                                        <p>@item.MainClientName</p>
                                        <p><i>@item.MainNickname</i></p>

                                    </td>
                                    <td class="center">
                                        @item.CreatedOn.ToString(format: "dd.MM.yyyy/HH:mm")
                                    </td>
                                    <td class="center">
                                        @(item.SentOn.HasValue ? item.SentOn.Value.ToString("dd.MM.yyyy/HH:mm") : "not send yet")
                                    </td>
                                    <td class="center">
                                        <strong>@Html.DisplayFor(modelItem => item.SecondAccountNum)</strong>
                                        <p>@item.SecondClientName</p>
                                        <p><i>@item.SecondNickname</i></p>
                                    </td>
                                    @if (item.Amount>0)
                                    {
                                        <td class="right green-text">
                                            @item.Amount.ToString(format: "f2")
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="right red-text">
                                            @item.Amount.ToString(format: "f2")
                                        </td>

                                    }
                                    <td class="right">
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    @*<td align="right">
            <a asp-action="Details" asp-route-id="@item.AccountId"><button class="btn btn-outline-info btn-sm"><span>Details</span></button></a>
        </td>*@
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="dataTables_paginate paging_simple_numbers">
    <ul class="pagination">
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
        <li class="paginate_button page-item previous @prevDisabled">
            <a asp-action="GetTransactionsList"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link trnTableClickHandler">
                Previous
            </a>
        </li>
        @{
            for (int i = 1; i <= Model.TotalPages; i++)
            {
                var isactiv = "";
                if (i == Model.PageIndex)
                {
                    isactiv = "active";
                }
                else
                {
                    isactiv = "";
                }
                <li class="paginate_button page-item @isactiv">
                    <a asp-action="GetTransactionsList"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber=@i
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="page-link trnTableClickHandler">
                        @i
                    </a>
                </li>
            }
        }
        <li class="paginate_button page-item next @nextDisabled">
            <a asp-action="GetTransactionsList"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link trnTableClickHandler">
                Next
            </a>
        </li>
    </ul>
</div>
    </div>
